#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        shiftCaps: shiftCaps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "SHIFTCAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        tabEsc: tabEsc {
            compatible = "zmk,behavior-tap-dance";
            display-name = "TABESC";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        HoldTap: HoldTap {
            compatible = "zmk,behavior-hold-tap";
            display-name = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        guiLayer: guiLayer {
            compatible = "zmk,behavior-tap-dance";
            display-name = "GUILAYER";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&kp LEFT_GUI>;
        };

        hmR: hmR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <18 33 5 4 17 32 31 16 3 2 15 30 29 14 1>;
            tapping-term-ms = <200>;
        };

        hmL: hmL {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <7 22 8 23 36 37 38 24 9 10 25 39 40 26 11>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&tabEsc         &kp Q  &kp W  &kp E      &kp R        &kp T                                 &kp UP                &kp Y                       &kp U        &kp I                      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D      &kp F        &kp G                       &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                       &kp J        &kp K                      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C      &kp V        &kp B         &kp C_MUTE              &kp DOWN              &kp N                       &kp M        &kp COMMA                  &kp DOT  &kp FSLH  &shiftCaps
                              &guiLayer  &lt 2 SPACE  &lt 4 DELETE                                                &HoldTap RIGHT_SHIFT ENTER  &lt 3 SPACE  &HoldTap RIGHT_ALT DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ColemakDH {
            display-name = "ColemakDH";
            bindings = <
&trans  &kp Q  &kp W  &kp F   &kp P              &kp B                     &trans          &kp J   &kp L               &kp U   &kp Y   &kp SEMI  &trans
&trans  &kp A  &kp R  &kp S   &hmL LEFT_SHIFT T  &kp G             &trans  &trans  &trans  &kp M   &hmR RIGHT_SHIFT N  &kp E   &kp I   &kp O     &trans
&trans  &kp Z  &kp X  &kp C   &kp D              &kp V   &trans            &trans          &kp K   &kp H               &trans  &trans  &trans    &trans
                      &trans  &trans             &trans                                    &trans  &trans              &trans
            >;
        };

        Number {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3            &kp N4             &kp N5                               &kp PAGE_UP               &kp N6     &kp N7    &kp N8    &kp N9     &kp N0          &trans
&trans     &kp LC(A)  &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans                     &kp HOME  &kp PRINTSCREEN  &kp END  &kp MINUS  &kp LEFT  &kp UP    &kp RIGHT  &trans          &kp BACKSLASH
&trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)         &kp LC(V)          &trans  &rgb_ug RGB_TOG              &kp PAGE_DOWN             &kp EQUAL  &trans    &kp DOWN  &trans     &kp SCROLLLOCK  &kp PAUSE_BREAK
                                 &trans            &trans             &trans                                                         &trans     &trans    &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        SYMBOLS {
            display-name = "SYMBOL";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR       &kp PERCENT                               &kp PAGE_UP               &kp CARET  &kp AMPERSAND  &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &kp LC(A)        &trans       &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans                          &kp HOME  &kp PRINTSCREEN  &kp END  &kp UNDER  &kp LEFT       &kp UP_ARROW    &kp RIGHT             &trans                 &kp PIPE
&trans     &kp LC(Z)        &kp LC(X)    &kp LC(C)       &kp LC(V)        &trans       &rgb_ug RGB_TOG              &kp PAGE_DOWN             &kp PLUS   &trans         &kp DOWN_ARROW  &trans                &trans                 &trans
                                         &trans          &trans           &trans                                                              &trans     &trans         &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        Fn {
            display-name = "Fn";
            bindings = <
&kp LA(TAB)  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                &mmv MOVE_UP                     &kp F6     &kp F7    &kp F8    &kp F9     &kp F10         &trans
&trans       &trans  &trans  &trans  &trans  &kp F11               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mkp RCLK  &kp LEFT  &kp UP    &kp RIGHT  &trans          &trans
&trans       &trans  &trans  &trans  &trans  &kp F12  &mkp MCLK                    &mmv MOVE_DOWN                   &mkp MB4   &mkp MB5  &kp DOWN  &trans     &kp SCROLLLOCK  &kp PAUSE_BREAK
                             &trans  &trans  &trans                                                                 &trans     &trans    &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        CONFIG {
            display-name = "CONFIG";
            bindings = <
&trans      &trans        &trans        &trans        &trans        &to 0                                    &rgb_ug RGB_HUI                   &to 1   &trans       &trans      &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &rgb_ug RGB_SAD  &rgb_ug RGB_EFF  &rgb_ug RGB_SAI  &trans  &trans       &trans      &trans  &trans  &trans
&trans      &out OUT_USB  &out OUT_BLE  &sys_reset    &bootloader   &trans        &trans                     &rgb_ug RGB_HUD                   &trans  &bootloader  &sys_reset  &trans  &trans  &trans
                                        &trans        &trans        &trans                                                                     &trans  &trans       &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_4 {
            status = "reserved";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_5 {
            status = "reserved";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_6 {
            status = "reserved";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ConfigTrigger1 {
            if-layers = <2 4>;
            then-layer = <5>;
        };

        ConfigTrigger2 {
            if-layers = <2 3>;
            then-layer = <5>;
        };

        ConfigTrigger3 {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };
};
