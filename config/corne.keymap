#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

&caps_word {
};

&soft_off {
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 45 44 46>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <0 1 2 4 13 14 15 16 17 26 27 28 29 30 3 5 18 31 40 41 42>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&td1       &kp Q              &kp W         &kp E            &kp R            &kp T                  &kp UP_ARROW     &kp Y        &kp U             &kp I             &kp O         &kp P                       &kp BSPC
&td0       &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G                  &kp DOWN_ARROW   &kp H        &hmr RIGHT_GUI J  &hmr RIGHT_ALT K  &hmr LCTRL L  &hmr RIGHT_SHIFT SEMICOLON  &kp SQT
&kp LCTRL  &kp Z              &kp X         &kp C            &kp V            &kp B                  &kp LEFT_ARROW   &kp N        &kp M             &kp COMMA         &kp DOT       &kp FSLH                    &kp RIGHT_SHIFT
                              &kp C_MUTE    &mo 1            &lt 2 SPACE      &hm LEFT_ALT DELETE    &kp RIGHT_ARROW  &lt 2 ENTER  &kp SPACE         &kp DELETE
                                                                                                     &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Number {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2           &kp N3  &kp N4  &kp N5    &kp PAGE_UP      &kp N6     &kp N7            &kp N8             &kp N9  &kp N0  &trans
&trans     &trans  &trans           &trans  &trans  &trans    &kp PAGE_DOWN    &kp MINUS  &trans            &trans             &trans  &trans  &kp BACKSLASH
&trans     &trans  &trans           &trans  &trans  &trans    &kp HOME         &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans
                   &rgb_ug RGB_TOG  &trans  &trans  &trans    &kp END          &trans     &trans            &trans
                                                              &kp PRINTSCREEN
            >;

            label = "NUMBER";
            sensor-bindings = <&rgb_encoder>;
        };

        Fn {
            display-name = "Fn";
            bindings = <
&trans  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5     &mmv MOVE_UP     &kp F6     &kp F7          &kp F8        &kp F9    &kp F10         &trans
&trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &kp F11    &mmv MOVE_DOWN   &mkp RCLK  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN  &kp RIGHT       &trans
&trans  &trans  &trans     &trans     &trans     &kp F12    &mmv MOVE_LEFT   &mkp MB4   &mkp MB5        &trans        &trans    &kp SCROLLLOCK  &kp PAUSE_BREAK
                &mkp MCLK  &trans     &trans     &trans     &mmv MOVE_RIGHT  &trans     &trans          &trans
                                                            &mkp LCLK
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &rgb_ug RGB_HUI  &kp CARET  &kp AMPS     &kp ASTRK   &kp LPAR  &kp RPAR  &kp BACKSLASH
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_HUD  &trans     &trans       &trans      &trans    &trans    &trans
&trans      &out OUT_USB  &out OUT_BLE  &sys_reset    &bootloader   &soft_off       &rgb_ug RGB_SAD  &soft_off  &bootloader  &sys_reset  &trans    &trans    &trans
                          &trans        &trans        &trans        &trans          &rgb_ug RGB_SAI  &trans     &trans       &trans
                                                                                    &rgb_ug RGB_EFF
            >;

            label = "SYMBOL";
            sensor-bindings = <&rgb_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        OnePlusTwo {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
